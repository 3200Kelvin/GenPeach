(()=>{"use strict";const e="var(--orange)",t="var(--white-15)",n="var(--border-radius)",r=window.matchMedia("(pointer: coarse)").matches;function o(e,t){return gsap.quickTo(e,t,{duration:.8,ease:"power2.out"})}/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||window.navigator.deviceMemory;gsap.defaults({duration:0,ease:"power1.inOut"}),function(){const r=document.querySelector(".menu").querySelector(".menu__mobile"),o=r.querySelector(".burger-btn"),i=r.querySelector(".menu__mobile__dropdown"),a=i.querySelector(".menu__mobile__container"),u=i.querySelector(".menu__mobile__content"),l=i.querySelector(".menu__mobile__corner");let c=!1;o.addEventListener("click",(()=>c?(c=!1,void gsap.timeline().add((()=>{gsap.to(o,{transform:"rotateZ(0deg)",duration:.4}),gsap.to(r,{backgroundColor:t,borderBottomLeftRadius:n,borderBottomRightRadius:n}),gsap.to(u,{backgroundColor:t}),gsap.to(l,{color:t})})).to(a,{transform:"translateY(-100%)",duration:.4}).to(i,{display:"none"})):(c=!0,void gsap.timeline().add((()=>{gsap.to(o,{transform:"rotateZ(-45deg)",duration:.4}),gsap.to(r,{backgroundColor:e,borderBottomLeftRadius:0,borderBottomRightRadius:0}),gsap.to(u,{backgroundColor:e}),gsap.to(l,{color:e})})).to(a,{transform:"translateY(-100%)"}).to(i,{display:"block"}).to(a,{transform:"translateY(0%)",duration:.4}))))}(),(()=>{if(r)return;const e=document.querySelector(".hero"),t=e.querySelector(".cursor"),{setTarget:n}=((e,t,{x:n=0,y:i=0,isSmooth:a=!0}={})=>{if(r)return()=>{};const u={x:n,y:i},l=new Proxy(u,{set:(e,t,n)=>(e[t]=n,requestAnimationFrame(p),!0)}),c=a?o(l,"x"):e=>l.x=e,s=a?o(l,"y"):e=>l.y=e,v=(()=>{let e=null;return function(t){e&&(cancelAnimationFrame(e),e=null),e=requestAnimationFrame(t)}})();return t.length?t.forEach((e=>e.addEventListener("mouseenter",f))):t&&t.addEventListener("mouseenter",f),{setTarget:g};function f(t){const{pageX:n,pageY:r,target:o}=t;g(n,r),e.classList.add("entered"),o.addEventListener("mousemove",m),o.addEventListener("mouseleave",d)}function m(e){const{pageX:t,pageY:n}=e;g(t,n)}function d(t){const{pageX:n,pageY:r,target:o}=t;g(n,r),e.classList.remove("entered"),o.removeEventListener("mousemove",m),o.removeEventListener("mouseleave",d)}function g(e,t){v((()=>{c(e),s(t)}))}function p(){const{x:t,y:n}=u;e.style.setProperty("--transform",`translate(${t}px, ${n}px)`)}})(t,e,{x:window.innerWidth/2,y:window.innerHeight/2,isSmooth:!1});n(window.innerWidth/2,window.innerHeight/2)})(),document.querySelectorAll('[data-animation="unblur-letters"]').forEach((function(e){const t=e.querySelector(".highlighted");t&&setTimeout((()=>{t.classList.add("highlighted--transition")}),10);const n=SplitText.create(e,{type:"chars"});gsap.to(n.chars,{transform:"scale(0.95)",opacity:0,filter:"blur(10px)"}),gsap.timeline({scrollTrigger:{trigger:e,start:"top 85%"}}).to(n.chars,{transform:"scale(1)",opacity:1,filter:"blur(0px)",duration:.4,stagger:.02}).add((()=>{t&&t.classList.add("highlighted--shown")}))})),(()=>{const e=document.querySelector(".solution").querySelector("canvas");e.width=e.clientWidth,e.height=e.clientHeight;let t={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:5,SPLAT_RADIUS:.2,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function n(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let r=[],o=[];r.push(new n);const{gl:i,ext:a}=function(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let n=e.getContext("webgl2",t);const r=!!n;let o,i;r||(n=e.getContext("webgl",t)||e.getContext("experimental-webgl",t)),r?(n.getExtension("EXT_color_buffer_float"),i=n.getExtension("OES_texture_float_linear")):(o=n.getExtension("OES_texture_half_float"),i=n.getExtension("OES_texture_half_float_linear")),n.clearColor(0,0,0,1);const a=r?n.HALF_FLOAT:o.HALF_FLOAT_OES;let l,c,s;return r?(l=u(n,n.RGBA16F,n.RGBA,a),c=u(n,n.RG16F,n.RG,a),s=u(n,n.R16F,n.RED,a)):(l=u(n,n.RGBA,n.RGBA,a),c=u(n,n.RGBA,n.RGBA,a),s=u(n,n.RGBA,n.RGBA,a)),{gl:n,ext:{formatRGBA:l,formatRG:c,formatR:s,halfFloatTexType:a,supportLinearFiltering:i}}}(e);function u(e,t,n,r){if(!function(e,t,n,r){let o=e.createTexture();e.bindTexture(e.TEXTURE_2D,o),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,n,r,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,o,0);return e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,t,n,r))switch(t){case e.R16F:return u(e,e.RG16F,e.RG,r);case e.RG16F:return u(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:t,format:n}}/Mobi|Android/i.test(navigator.userAgent)&&(t.SHADING=!1),a.supportLinearFiltering||(t.SHADING=!1,t.BLOOM=!1);class l{constructor(e,t){if(this.uniforms={},this.program=i.createProgram(),i.attachShader(this.program,e),i.attachShader(this.program,t),i.linkProgram(this.program),!i.getProgramParameter(this.program,i.LINK_STATUS))throw i.getProgramInfoLog(this.program);const n=i.getProgramParameter(this.program,i.ACTIVE_UNIFORMS);for(let e=0;e<n;e++){const t=i.getActiveUniform(this.program,e).name;this.uniforms[t]=i.getUniformLocation(this.program,t)}}bind(){i.useProgram(this.program)}}function c(e,t){const n=i.createShader(e);if(i.shaderSource(n,t),i.compileShader(n),!i.getShaderParameter(n,i.COMPILE_STATUS))throw i.getShaderInfoLog(n);return n}const s=c(i.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n    "),v=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n    "),f=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        uniform vec4 color;\n        void main () {\n            gl_FragColor = color;\n        }\n    "),m=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float aspectRatio;\n        #define SCALE 25.0\n        void main () {\n            vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n            float v = mod(uv.x + uv.y, 2.0);\n            v = v * 0.1 + 0.8;\n            gl_FragColor = vec4(vec3(v), 1.0);\n        }\n    "),d=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTexture;\n        void main () {\n            vec3 C = texture2D(uTexture, vUv).rgb;\n            float a = max(C.r, max(C.g, C.b));\n            gl_FragColor = vec4(C, a);\n        }\n    "),g=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform sampler2D uBloom;\n        uniform sampler2D uDithering;\n        uniform vec2 ditherScale;\n        void main () {\n            vec3 C = texture2D(uTexture, vUv).rgb;\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n            noise = noise * 2.0 - 1.0;\n            bloom += noise / 800.0;\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n            C += bloom;\n            float a = max(C.r, max(C.g, C.b));\n            gl_FragColor = vec4(C, a);\n        }\n    "),p=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uTexture;\n        uniform vec2 texelSize;\n        void main () {\n            vec3 L = texture2D(uTexture, vL).rgb;\n            vec3 R = texture2D(uTexture, vR).rgb;\n            vec3 T = texture2D(uTexture, vT).rgb;\n            vec3 B = texture2D(uTexture, vB).rgb;\n            vec3 C = texture2D(uTexture, vUv).rgb;\n            float dx = length(R) - length(L);\n            float dy = length(T) - length(B);\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n            vec3 l = vec3(0.0, 0.0, 1.0);\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n            C.rgb *= diffuse;\n            float a = max(C.r, max(C.g, C.b));\n            gl_FragColor = vec4(C, a);\n        }\n    "),h=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uTexture;\n        uniform sampler2D uBloom;\n        uniform sampler2D uDithering;\n        uniform vec2 ditherScale;\n        uniform vec2 texelSize;\n        void main () {\n            vec3 L = texture2D(uTexture, vL).rgb;\n            vec3 R = texture2D(uTexture, vR).rgb;\n            vec3 T = texture2D(uTexture, vT).rgb;\n            vec3 B = texture2D(uTexture, vB).rgb;\n            vec3 C = texture2D(uTexture, vUv).rgb;\n            float dx = length(R) - length(L);\n            float dy = length(T) - length(B);\n            vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n            vec3 l = vec3(0.0, 0.0, 1.0);\n            float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n            C *= diffuse;\n            vec3 bloom = texture2D(uBloom, vUv).rgb;\n            vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n            noise = noise * 2.0 - 1.0;\n            bloom += noise / 800.0;\n            bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n            C += bloom;\n            float a = max(C.r, max(C.g, C.b));\n            gl_FragColor = vec4(C, a);\n        }\n    "),T=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform vec3 curve;\n        uniform float threshold;\n        void main () {\n            vec3 c = texture2D(uTexture, vUv).rgb;\n            float br = max(c.r, max(c.g, c.b));\n            float rq = clamp(br - curve.x, 0.0, curve.y);\n            rq = curve.z * rq * rq;\n            c *= max(rq, br - threshold) / max(br, 0.0001);\n            gl_FragColor = vec4(c, 0.0);\n        }\n    "),E=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uTexture;\n        void main () {\n            vec4 sum = vec4(0.0);\n            sum += texture2D(uTexture, vL);\n            sum += texture2D(uTexture, vR);\n            sum += texture2D(uTexture, vT);\n            sum += texture2D(uTexture, vB);\n            sum *= 0.25;\n            gl_FragColor = sum;\n        }\n    "),x=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uTexture;\n        uniform float intensity;\n        void main () {\n            vec4 sum = vec4(0.0);\n            sum += texture2D(uTexture, vL);\n            sum += texture2D(uTexture, vR);\n            sum += texture2D(uTexture, vT);\n            sum += texture2D(uTexture, vB);\n            sum *= 0.25;\n            gl_FragColor = sum * intensity;\n        }\n    "),R=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n    "),y=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n        void main () {\n            vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n            gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n            gl_FragColor.a = 1.0;\n        }\n    "),_=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform float dt;\n        uniform float dissipation;\n        void main () {\n            vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n            gl_FragColor = dissipation * texture2D(uSource, coord);\n            gl_FragColor.a = 1.0;\n        }\n    "),D=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n    "),b=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n    "),S=c(i.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n            vec2 vel = texture2D(uVelocity, vUv).xy;\n            gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n        }\n    "),A=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n        vec2 boundary (vec2 uv) {\n            return uv;\n            // uncomment if you use wrap or repeat texture mode\n            // uv = min(max(uv, 0.0), 1.0);\n            // return uv;\n        }\n        void main () {\n            float L = texture2D(uPressure, boundary(vL)).x;\n            float R = texture2D(uPressure, boundary(vR)).x;\n            float T = texture2D(uPressure, boundary(vT)).x;\n            float B = texture2D(uPressure, boundary(vB)).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n    "),L=c(i.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n        vec2 boundary (vec2 uv) {\n            return uv;\n            // uv = min(max(uv, 0.0), 1.0);\n            // return uv;\n        }\n        void main () {\n            float L = texture2D(uPressure, boundary(vL)).x;\n            float R = texture2D(uPressure, boundary(vR)).x;\n            float T = texture2D(uPressure, boundary(vT)).x;\n            float B = texture2D(uPressure, boundary(vB)).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n    "),w=(i.bindBuffer(i.ARRAY_BUFFER,i.createBuffer()),i.bufferData(i.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,i.createBuffer()),i.bufferData(i.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),i.STATIC_DRAW),i.vertexAttribPointer(0,2,i.FLOAT,!1,0,0),i.enableVertexAttribArray(0),e=>{i.bindFramebuffer(i.FRAMEBUFFER,e),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0)});let F,U,B,O,C,N,I,P,M,G,X=function(){let e=i.createTexture();i.bindTexture(i.TEXTURE_2D,e),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.REPEAT),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.REPEAT),i.texImage2D(i.TEXTURE_2D,0,i.RGB,1,1,0,i.RGB,i.UNSIGNED_BYTE,new Uint8Array([255,255,255]));let t={texture:e,width:1,height:1,attach:t=>(i.activeTexture(i.TEXTURE0+t),i.bindTexture(i.TEXTURE_2D,e),t)},n=new Image;return n.onload=()=>{t.width=n.width,t.height=n.height,i.bindTexture(i.TEXTURE_2D,e),i.texImage2D(i.TEXTURE_2D,0,i.RGB,i.RGB,i.UNSIGNED_BYTE,n)},n.src="LDR_RGB1_0.png",t}();const H=new l(s,v),q=new l(s,f),z=new l(s,m),k=new l(s,d),V=new l(s,g),Y=new l(s,p),W=new l(s,h),K=new l(s,T),$=new l(s,E),Z=new l(s,x),j=new l(s,R),J=new l(s,a.supportLinearFiltering?_:y),Q=new l(s,D),ee=new l(s,b),te=new l(s,S),ne=new l(s,A),re=new l(s,L);function oe(){let e=ve(t.SIM_RESOLUTION),n=ve(t.DYE_RESOLUTION);F=e.width,U=e.height,B=n.width,O=n.height;const r=a.halfFloatTexType,u=a.formatRGBA,l=a.formatRG,c=a.formatR,s=a.supportLinearFiltering?i.LINEAR:i.NEAREST;C=null==C?ae(B,O,u.internalFormat,u.format,r,s):ue(C,B,O,u.internalFormat,u.format,r,s),N=null==N?ae(F,U,l.internalFormat,l.format,r,s):ue(N,F,U,l.internalFormat,l.format,r,s),I=ie(F,U,c.internalFormat,c.format,r,i.NEAREST),P=ie(F,U,c.internalFormat,c.format,r,i.NEAREST),M=ae(F,U,c.internalFormat,c.format,r,i.NEAREST),function(){let e=ve(t.BLOOM_RESOLUTION);const n=a.halfFloatTexType,r=a.formatRGBA,u=a.supportLinearFiltering?i.LINEAR:i.NEAREST;G=ie(e.width,e.height,r.internalFormat,r.format,n,u),o.length=0;for(let i=0;i<t.BLOOM_ITERATIONS;i++){let t=e.width>>i+1,a=e.height>>i+1;if(t<2||a<2)break;let l=ie(t,a,r.internalFormat,r.format,n,u);o.push(l)}}()}function ie(e,t,n,r,o,a){i.activeTexture(i.TEXTURE0);let u=i.createTexture();i.bindTexture(i.TEXTURE_2D,u),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,a),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,a),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texImage2D(i.TEXTURE_2D,0,n,e,t,0,r,o,null);let l=i.createFramebuffer();return i.bindFramebuffer(i.FRAMEBUFFER,l),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,u,0),i.viewport(0,0,e,t),i.clear(i.COLOR_BUFFER_BIT),{texture:u,fbo:l,width:e,height:t,attach:e=>(i.activeTexture(i.TEXTURE0+e),i.bindTexture(i.TEXTURE_2D,u),e)}}function ae(e,t,n,r,o,i){let a=ie(e,t,n,r,o,i),u=ie(e,t,n,r,o,i);return{get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function ue(e,t,n,r,o,a,u){return e.read=function(e,t,n,r,o,a,u){let l=ie(t,n,r,o,a,u);return H.bind(),i.uniform1i(H.uniforms.uTexture,e.attach(0)),i.uniform1f(H.uniforms.value,1),w(l.fbo),l}(e.read,t,n,r,o,a,u),e.write=ie(t,n,r,o,a,u),e}oe();let le=Date.now();function ce(e=!1){let t=e?se(180,0,.5):se(Math.random(),1,1);return t.r*=.15,t.g*=.15,t.b*=.15,t}function se(e,t,n){let r,o,i,a,u,l,c,s;switch(a=Math.floor(6*e),u=6*e-a,l=n*(1-t),c=n*(1-u*t),s=n*(1-(1-u)*t),a%6){case 0:r=n,o=s,i=l;break;case 1:r=c,o=n,i=l;break;case 2:r=l,o=n,i=s;break;case 3:r=l,o=c,i=n;break;case 4:r=s,o=l,i=n;break;case 5:r=n,o=l,i=c}return{r,g:o,b:i}}function ve(e){let t=i.drawingBufferWidth/i.drawingBufferHeight;t<1&&(t=1/t);let n=Math.round(e*t),r=Math.round(e);return i.drawingBufferWidth>i.drawingBufferHeight?{width:n,height:r}:{width:r,height:n}}function fe(e,t,n){return{x:t/e.width,y:n/e.height}}!function n(){e.width==e.clientWidth&&e.height==e.clientHeight||(e.width=e.clientWidth,e.height=e.clientHeight,oe()),function(){for(let c=0;c<r.length;c++){const s=r[c];s.moved&&(n=s.x,o=s.y,a=s.dx,u=s.dy,l=s.color,i.viewport(0,0,F,U),j.bind(),i.uniform1i(j.uniforms.uTarget,N.read.attach(0)),i.uniform1f(j.uniforms.aspectRatio,e.width/e.height),i.uniform2f(j.uniforms.point,n/e.width,1-o/e.height),i.uniform3f(j.uniforms.color,a,-u,1),i.uniform1f(j.uniforms.radius,t.SPLAT_RADIUS/100),w(N.write.fbo),N.swap(),i.viewport(0,0,B,O),i.uniform1i(j.uniforms.uTarget,C.read.attach(0)),i.uniform3f(j.uniforms.color,l.r,l.g,l.b),w(C.write.fbo),C.swap(),s.moved=!1)}var n,o,a,u,l;if(t.COLORFUL&&le+100<Date.now()){le=Date.now();for(let e=0;e<r.length;e++)r[e].color=ce(!0)}}(),t.PAUSED||function(){i.disable(i.BLEND),i.viewport(0,0,F,U),ee.bind(),i.uniform2f(ee.uniforms.texelSize,1/F,1/U),i.uniform1i(ee.uniforms.uVelocity,N.read.attach(0)),w(P.fbo),te.bind(),i.uniform2f(te.uniforms.texelSize,1/F,1/U),i.uniform1i(te.uniforms.uVelocity,N.read.attach(0)),i.uniform1i(te.uniforms.uCurl,P.attach(1)),i.uniform1f(te.uniforms.curl,t.CURL),i.uniform1f(te.uniforms.dt,.016),w(N.write.fbo),N.swap(),Q.bind(),i.uniform2f(Q.uniforms.texelSize,1/F,1/U),i.uniform1i(Q.uniforms.uVelocity,N.read.attach(0)),w(I.fbo),H.bind(),i.uniform1i(H.uniforms.uTexture,M.read.attach(0)),i.uniform1f(H.uniforms.value,t.PRESSURE_DISSIPATION),w(M.write.fbo),M.swap(),ne.bind(),i.uniform2f(ne.uniforms.texelSize,1/F,1/U),i.uniform1i(ne.uniforms.uDivergence,I.attach(0));for(let e=0;e<t.PRESSURE_ITERATIONS;e++)i.uniform1i(ne.uniforms.uPressure,M.read.attach(1)),w(M.write.fbo),M.swap();re.bind(),i.uniform2f(re.uniforms.texelSize,1/F,1/U),i.uniform1i(re.uniforms.uPressure,M.read.attach(0)),i.uniform1i(re.uniforms.uVelocity,N.read.attach(1)),w(N.write.fbo),N.swap(),J.bind(),i.uniform2f(J.uniforms.texelSize,1/F,1/U),a.supportLinearFiltering||i.uniform2f(J.uniforms.dyeTexelSize,1/F,1/U);let e=N.read.attach(0);i.uniform1i(J.uniforms.uVelocity,e),i.uniform1i(J.uniforms.uSource,e),i.uniform1f(J.uniforms.dt,.016),i.uniform1f(J.uniforms.dissipation,t.VELOCITY_DISSIPATION),w(N.write.fbo),N.swap(),i.viewport(0,0,B,O),a.supportLinearFiltering||i.uniform2f(J.uniforms.dyeTexelSize,1/B,1/O),i.uniform1i(J.uniforms.uVelocity,N.read.attach(0)),i.uniform1i(J.uniforms.uSource,C.read.attach(1)),i.uniform1f(J.uniforms.dissipation,t.DENSITY_DISSIPATION),w(C.write.fbo),C.swap()}(),function(n){t.BLOOM&&function(e,n){if(o.length<2)return;let r=n;i.disable(i.BLEND),K.bind();let a=t.BLOOM_THRESHOLD*t.BLOOM_SOFT_KNEE+1e-4,u=t.BLOOM_THRESHOLD-a,l=2*a,c=.25/a;i.uniform3f(K.uniforms.curve,u,l,c),i.uniform1f(K.uniforms.threshold,t.BLOOM_THRESHOLD),i.uniform1i(K.uniforms.uTexture,e.attach(0)),i.viewport(0,0,r.width,r.height),w(r.fbo),$.bind();for(let e=0;e<o.length;e++){let t=o[e];i.uniform2f($.uniforms.texelSize,1/r.width,1/r.height),i.uniform1i($.uniforms.uTexture,r.attach(0)),i.viewport(0,0,t.width,t.height),w(t.fbo),r=t}i.blendFunc(i.ONE,i.ONE),i.enable(i.BLEND);for(let e=o.length-2;e>=0;e--){let t=o[e];i.uniform2f($.uniforms.texelSize,1/r.width,1/r.height),i.uniform1i($.uniforms.uTexture,r.attach(0)),i.viewport(0,0,t.width,t.height),w(t.fbo),r=t}i.disable(i.BLEND),Z.bind(),i.uniform2f(Z.uniforms.texelSize,1/r.width,1/r.height),i.uniform1i(Z.uniforms.uTexture,r.attach(0)),i.uniform1f(Z.uniforms.intensity,t.BLOOM_INTENSITY),i.viewport(0,0,n.width,n.height),w(n.fbo)}(C.read,G),null!=n&&t.TRANSPARENT?i.disable(i.BLEND):(i.blendFunc(i.ONE,i.ONE_MINUS_SRC_ALPHA),i.enable(i.BLEND));let r=null==n?i.drawingBufferWidth:B,a=null==n?i.drawingBufferHeight:O;if(i.viewport(0,0,r,a),!t.TRANSPARENT){q.bind();let e=t.BACK_COLOR;i.uniform4f(q.uniforms.color,e.r/255,e.g/255,e.b/255,1),w(n)}if(null==n&&t.TRANSPARENT&&(z.bind(),i.uniform1f(z.uniforms.aspectRatio,e.width/e.height),w(null)),t.SHADING){let e=t.BLOOM?W:Y;if(e.bind(),i.uniform2f(e.uniforms.texelSize,1/r,1/a),i.uniform1i(e.uniforms.uTexture,C.read.attach(0)),t.BLOOM){i.uniform1i(e.uniforms.uBloom,G.attach(1)),i.uniform1i(e.uniforms.uDithering,X.attach(2));let t=fe(X,r,a);i.uniform2f(e.uniforms.ditherScale,t.x,t.y)}}else{let e=t.BLOOM?V:k;if(e.bind(),i.uniform1i(e.uniforms.uTexture,C.read.attach(0)),t.BLOOM){i.uniform1i(e.uniforms.uBloom,G.attach(1)),i.uniform1i(e.uniforms.uDithering,X.attach(2));let t=fe(X,r,a);i.uniform2f(e.uniforms.ditherScale,t.x,t.y)}}w(n)}(null),requestAnimationFrame(n)}(),e.addEventListener("mousemove",(e=>{r[0].moved=r[0].down,r[0].dx=5*(e.offsetX-r[0].x),r[0].dy=5*(e.offsetY-r[0].y),r[0].x=e.offsetX,r[0].y=e.offsetY})),e.addEventListener("touchmove",(e=>{e.preventDefault();const t=e.targetTouches;for(let e=0;e<t.length;e++){let n=r[e];n.moved=n.down,n.dx=8*(t[e].pageX-n.x),n.dy=8*(t[e].pageY-n.y),n.x=t[e].pageX,n.y=t[e].pageY}}),!1),r[0].down=!0,r[0].color=ce(),e.addEventListener("touchstart",(e=>{e.preventDefault();const t=e.targetTouches;for(let e=0;e<t.length;e++)e>=r.length&&r.push(new n),r[e].id=t[e].identifier,r[e].down=!0,r[e].x=t[e].pageX,r[e].y=t[e].pageY,r[e].color=ce()}))})(),document.querySelectorAll(".expandable").forEach((e=>{const t=e.querySelector(".expandable__container"),n=e.querySelector('[data-trigger="show-more"]'),r=e.querySelector('[data-trigger="show-less"]');gsap.timeline().to(t,{height:0}).to(r,{display:"none"}).to(n,{display:"block"}).to(t,{display:"none"}),n.addEventListener("click",(function(){gsap.timeline().to(t,{display:"block"}).to(n,{display:"none"}).to(r,{display:"block"}).to(t,{height:"auto",duration:.4})})),r.addEventListener("click",(function(){gsap.timeline().to(r,{display:"none"}).to(n,{display:"block"}).to(t,{height:0,duration:.4}).to(t,{display:"none"})}))})),(()=>{const e=document.querySelector(".slider"),t=e.querySelector(".slider__content__entries"),n=t.querySelectorAll(".slider__content__entry"),r=e.querySelectorAll(".slider__image"),o=e.querySelector(".slider__content__dots"),i=o.querySelector(".slider__content__dot"),a=[i],[u,l]=e.querySelectorAll(".slider__content__button"),c=n.length,s=c+1;!function(){for(let e=a.length;e<c;e++){const e=i.cloneNode();o.appendChild(e),a.push(e)}}(),gsap.to(n[0],{display:"block",opacity:1}),gsap.to(r[0],{display:"block",opacity:1,filter:"blur(0px)"}),gsap.to(a[0],{opacity:.8}),m(0);let v=0;function f(t=1){const n=t*e.offsetHeight/s;window.scrollTo({top:window.scrollY+n})}function m(e){0===e?gsap.to(u,{opacity:0,pointerEvents:"none"}):e===c-1?gsap.to(l,{opacity:0,pointerEvents:"none"}):(gsap.to(u,{opacity:1,pointerEvents:"auto"}),gsap.to(l,{opacity:1,pointerEvents:"auto"}))}ScrollTrigger.create({trigger:e,start:"top top",end:"bottom bottom",scrub:!0,onUpdate:e=>{const o=e.progress;!function(e){var o,i;v===e||e>=c||(o=v,i=e,gsap.timeline().to(n[i],{display:"block",position:"absolute",opacity:0}).to(n[o],{opacity:0,duration:.5}).to(n[o],{position:"absolute"}).to(n[i],{position:"relative"}).add((()=>{const e=n[o].offsetHeight,r=n[i].offsetHeight;gsap.fromTo(t,{height:e},{height:r,duration:.5})})).to(n[i],{opacity:1,duration:.5}).to(n[o],{display:"none"}),gsap.timeline().to(r[i],{display:"block",opacity:0,filter:"blur(15px)"}).to(r[o],{filter:"blur(15px)",duration:.4}).add((()=>(gsap.to(r[i],{opacity:1,duration:.2}),gsap.to(r[o],{opacity:0,duration:.2})))).to(r[i],{filter:"blur(0px)",duration:.4}),gsap.to(a[i],{opacity:.8,duration:1}),gsap.to(a[o],{opacity:.15,duration:1}),m(e),v=e)}(Math.floor(o*s))}}),u.addEventListener("click",(()=>f(-1))),l.addEventListener("click",(()=>f()))})(),(()=>{const e=document.querySelector(".slider__content__bg");new ResizeObserver((t=>{const n=t[0],{width:r,height:o}=n.contentRect,i=r/window.innerWidth*10,a=i*(r/o);e.style.setProperty("--xCut",`${i}%`),e.style.setProperty("--yCut",`${a}%`)})).observe(e)})(),document.querySelectorAll(".accordeon").forEach((function(e){const t="true"===e.dataset.openWhenVisible,n=[...e.querySelectorAll(".accordeon__entry")].map(((e,t)=>{const n=e.querySelector(".accordeon__entry__header"),r=e.querySelector(".accordeon__entry__body"),i=e.querySelector(".accordeon__entry__content"),a=e.querySelector(".accordeon__entry__iicon");return n.addEventListener("click",(()=>o(t))),n.addEventListener("keydown",(e=>function(e,t){"Enter"!==e.key&&"Space"!==e.code||(e.preventDefault(),o(t))}(e,t))),gsap.timeline().to(n,{opacity:.6,backgroundColor:"transparent",clearProps:"all"}).to(a,{opacity:1}).to(r,{height:0}).to(i,{display:"none"}),{button:n,body:r,content:i,icon:a}}));let r=null;if(t){const t=new IntersectionObserver((e=>{e[0].isIntersecting&&(o(0),t.disconnect())}),{threshold:1});t.observe(e)}function o(e){null!==r&&function(e){const{button:t,body:n,content:r,icon:o}=e;gsap.timeline().to(t,{opacity:.6,backgroundColor:"transparent",clearProps:"all"}).to(o,{opacity:1}).to(n,{height:0,duration:.4}).to(r,{display:"none"})}(n[r]),r!==e?(function(e){const{button:t,body:n,content:r,icon:o}=e;gsap.timeline().to(r,{display:"block"}).to(t,{opacity:1,backgroundColor:"var(--orange)"}).to(o,{opacity:0}).to(n,{height:"auto",duration:.4})}(n[e]),r=e):r=null}})),document.querySelectorAll(".copy-button").forEach((function(e){const t=e.querySelector(".copy-button__square--top"),{value:n}=e.dataset;let r;e.addEventListener("click",(()=>{navigator.clipboard.writeText(n).then((()=>{r&&clearTimeout(r),gsap.to(t,{backgroundColor:"var(--orange)"}),r=setTimeout((()=>{gsap.to(t,{backgroundColor:"var(--black)"}),r=null}),4e3)})).catch((e=>console.error(e)))}))}))})();